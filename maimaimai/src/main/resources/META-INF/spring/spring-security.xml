<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd">

<!-- 	<context:component-scan base-package="com.mmm" />

	<global-method-security secured-annotations="enabled">
		AspectJ pointcut expression that locates our "post" method and applies 
			security that way <protect-pointcut expression="execution(* bigbank.*Service.post*(..))" 
			access="ROLE_TELLER"/>
	</global-method-security>

	Configuring RoleVoter bean to use custom access roles, by default roles 
		should be in the form ROLE_{XXX}
	<beans:bean id="roleVoter"
		class="org.springframework.security.access.vote.RoleVoter">
		<beans:property name="rolePrefix" value="ROLE_"></beans:property>
	</beans:bean>

	<beans:bean id="webExpressionVoter" class="org.springframework.security.web.access.expression.WebExpressionVoter">
		<beans:property name="expressionHandler" ref="webSecurityExpressionHandler"></beans:property>
	</beans:bean>
	
	<beans:bean id="webSecurityExpressionHandler" class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler">
		<beans:property name="defaultRolePrefix" value=""></beans:property>
	</beans:bean>
 
	<beans:bean id="accessDecisionManager"
		class="org.springframework.security.access.vote.AffirmativeBased">
    <beans:constructor-arg name="decisionVoters">
        <beans:list>
            <beans:ref bean="webExpressionVoter" />
        </beans:list>
    </beans:constructor-arg>			
	</beans:bean> -->
	
            <!-- <beans:ref bean="roleVoter" /> -->

<!-- 	<http use-expressions="true" authentication-manager-ref="dao-auth"
		access-decision-manager-ref="accessDecisionManager"> -->
	<http use-expressions="true" authentication-manager-ref="dao-auth">
		<intercept-url pattern="/index*" access="permitAll" />
		<intercept-url pattern="/home*" access="permitAll" />
		<intercept-url pattern="/login*" access="permitAll" />
		<intercept-url pattern="/register*" access="permitAll" />
		<intercept-url pattern="/timeout*" access="permitAll" />
		<intercept-url pattern="/error*" access="permitAll" />
		<intercept-url pattern="/denied*" access="isAuthenticated()" />
		<intercept-url pattern="/css/**" access="permitAll" />
		<intercept-url pattern="/memeber/**" access="hasRole('ROLE_USER')" />
		<intercept-url pattern="/secure/**" access="hasRole('ROLE_MAINT')" />
		<intercept-url pattern="/**" access="isAuthenticated()" />
		<form-login login-page="/login" login-processing-url="/j_spring_security_check"
			username-parameter="username" password-parameter="password" default-target-url="/secure/home" />
		<logout invalidate-session="true" logout-success-url="/home"
			logout-url="/j_spring_security_logout" delete-cookies="JSESSIONID" />
		<access-denied-handler error-page="/denied" />
		<session-management invalid-session-url="/timeout.jsp">
			<concurrency-control max-sessions="1"
				expired-url="/timeout.jsp" />
		</session-management>
	</http>


	<authentication-manager id="dao-auth">
		<authentication-provider user-service-ref="userDetailsService">
		</authentication-provider>
	</authentication-manager>
	
<!-- 	<sec:http ... >

    .
    . access denied handlers, concurrency control, port mappings etc
    .

    <sec:expression-handler ref="defaultWebSecurityExpressionHandler" />

</sec:http>

<bean id="defaultWebSecurityExpressionHandler"
      class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler">
      <beans:property name="roleHierarchy" ref="roleHierarchy"/>
</bean>

<bean id="accessDecisionManager" class="org.springframework.security.access.vote.AffirmativeBased">
    <beans:property name="decisionVoters">
        <list>
            <ref bean="roleHierarchyVoter" />
            <bean class="org.springframework.security.web.access.expression.WebExpressionVoter">
                <beans:property name="expressionHandler" ref="defaultWebSecurityExpressionHandler"/>
            </bean>
        </list>
    </beans:property>
</bean>
 -->


</beans:beans>